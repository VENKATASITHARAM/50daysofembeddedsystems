//ARUDINO_PIC_UARTM



// PIC16F877A Configuration Bit Settings

// 'C' source line config statements

// CONFIG
#pragma config FOSC = EXTRC     // Oscillator Selection bits (RC oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.
#include <xc.h>
#define _XTAL_FREQ 6000000
void initial();
unsigned char i,n;
void main()
{
    initial();
    while(1){
        n=PORTB;
        switch(n)
        {
            case 0xE0:TXREG='A';//USART Transmit Register. Holds the data to be transmitted on UART
            __delay_ms(500);
            break;
            case 0xD0:TXREG='B';
               __delay_ms(500); 
            break;
            case 0xB0:TXREG='C';
                __delay_ms(500);
            break;
            case 0x70:TXREG='D';
                __delay_ms(500);
            break;
        }    
    }
}
void initial()
{
    TRISC=0xC0;//transmitter and receiver pins are connected .
    TRISB=0xF0;//internal pull up
    PORTB=0x00;//portb as input port
    
    OPTION_REG&=0x7F;//internal pull-up enable--> 7bit should be 0.
    
    RCSTA=0X90;//1001 0000  serial port enable&continuous receive enable
    TXSTA=0X20;//0010 0000  transmission enabled
    SPBRG=0X09; //0000 1001 USART baudRate generator
    //for Asynchronours low speed baudrate=6Mhz/64(x+1)  9600=6Mhz/64(x+1)
}

