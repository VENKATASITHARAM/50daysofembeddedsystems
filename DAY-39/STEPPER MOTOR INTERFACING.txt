//STEPPER MOTOR INTERFACING
// PIC16F877A Configuration Bit Settings

// 'C' source line config statements

// CONFIG
#pragma config FOSC = EXTRC     // Oscillator Selection bits (RC oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#define _XTAL_FREQ 6000000 //Specify the XTAL crystall FREQ

void main(void)
{
  // Create Bit-Shifting Variable
  unsigned char i=0;
  // Set PORTB 8-Pins To Be Output Pins
  TRISB = 0x00;
  // Set All PORTB Pins To Be OFF (Initially) !
  PORTB = 0x00;
  // Set RC0, RC1 Pins To Be Input Pins
  TRISD0 = 1;
  TRISD1 = 1;
  // Create The System's Main Routine !
  while(1)
  {
    // While Button1 is pressed, Rotate CW
    while(!RD0)
    {
      PORTB = (1<<i);
      i++;
      __delay_ms(1000);
      if (i==4)
          i=0;
    }
    // While Button2 is pressed, Rotate CCW
    while(!RD1)
    {
      PORTB = (8>>i);
      i++;
      __delay_ms(1000);
      if (i==4)
          i=0;
    }
    
  }
  return;
}