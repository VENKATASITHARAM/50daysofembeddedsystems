//PIR SENSOR INTERFACING

// 'C' source line confiure statements
// CONFIG

#pragma config FOSC = EXTRC       // Oscillator Selection bits (HS oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF       // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#define _XTAL_FREQ 6000000 //Specify the XTAL crystall FREQ

#define PIR RC0
#define Buzzer RB2

void main() //The main function
{
    TRISB=0X00; //Instruct the MCU that the PORTB pins are used as Output.
    TRISC=0Xff; //Instruct the MCU that the PORTB pins are used as Input.
    PORTB=0X00; //Make all output of RB3 LOW

    while(1) //Get into the Infinie While loop
    {
        if(PIR ==1)
        {
            Buzzer=1;
            __delay_ms(1000);   //Wait
        }
        else
        {
            Buzzer=0;
        }
    }
}