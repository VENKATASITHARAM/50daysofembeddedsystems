//IR SENSOR INTERFACING

// 'C' source line confiure statements
// CONFIG

#pragma config FOSC = EXTRC       // Oscillator Selection bits (HS oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF       // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#define _XTAL_FREQ 6000000 //Specify the XTAL crystall FREQ

#define IR RB7
void Lcd_init(void);
void Lcd_Command(unsigned char );
void Lcd_Data(unsigned char);
unsigned char head[]="IR SENSOR",data0[]="MOTION NONE    ",data1[]="MOTION DETECTED";

void main() //The main function
{
    TRISB=0XFF; //Instruct the MCU that the PORTB pins are used as Output.
    TRISC=0X00;
    TRISD=0X00; //Instruct the MCU that the PORTB pins are used as Input.
    PORTD=0X00; //Make all output of LOW
    PORTC=0X00;
    
    Lcd_init();
    
    while(1) //Get into the Infinie While loop
    {
        if(IR ==1)
        {
            //led=1;
            Lcd_Command(0XC0);
            for(int i=0;i<16;i++)
                Lcd_Data(data1[i]);
            __delay_ms(1000);   //Wait
        }
        else
        {
            Lcd_Command(0XC0);
            for(int i=0;i<16;i++)
                Lcd_Data(data0[i]);
            //led=0;
        }
    }
}

void Lcd_init()
{
    Lcd_Command(0X38);
    __delay_ms(10);
    Lcd_Command(0X38);
    __delay_ms(10);
    Lcd_Command(0X38);//enable 5x7 matrix 
    __delay_ms(10);
    Lcd_Command(0X06);//move from left to right
    __delay_ms(10);
    Lcd_Command(0X0C);//enble display cursor off
    __delay_ms(10);
    Lcd_Command(0X01);//clear screen
    __delay_ms(10);
    
    Lcd_Command(0X80);
    for(int i=0;i<9;i++)
        Lcd_Data(head[i]);
}
void Lcd_Command(unsigned char comm)
{
    PORTC&=~0X08;//RS=0
    PORTD=comm;
    PORTC|=0X01;//E=1
    PORTC&=~0X01;//E=0
    __delay_ms(100);
}
void Lcd_Data(unsigned char d)
{
    PORTC|=0X08;//RS=1
    PORTD=d;
    PORTC|=0X01;//E=1
    PORTC&=~0X01;//E=0 
  __delay_ms(100);
}