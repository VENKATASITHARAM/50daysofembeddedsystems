//TIMER PRE-LOADING

// CONFIG
#pragma config FOSC = EXTRC     // Oscillator Selection bits (RC oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include<xc.h>
#define _XTAL_FREQUENCY 6000000
void init(void);
unsigned char c;
void main()
{
    init();
    while(1)
    {
        
    }
    return;
}
void init()
{
    TRISB=0X00;
    PORTB=0X00;
    TMR1=15535;//timer pre-load
    T1CON=0X01;//TIMER ON
    INTCON=0XC0;//GIE & PEIE =1
    PIE1=0X01;// Timer1 Interrupt Enable Bit
}
void __interrupt() _ISR()
{
    if(PIR1 & 0X01)//if interrupt occur
    {
        c++;
        if(c==50)//for 50 timer over-flow
        {
            PORTB=~PORTB;
            c=0;
        }
        TMR1=15535;//timer pre-load
        PIR1&=0XFE;// Clear The Interrupt Flag Bit
    }
}