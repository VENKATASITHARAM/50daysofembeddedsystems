//INTERRUPT VS POOLING
 // PIC16F877A Configuration Bit Settings

// 'C' source line config statements

// CONFIG
#pragma config FOSC = EXTRC     // Oscillator Selection bits (RC oscillator)
#pragma config WDTE = OFF        // Watchdog Timer Enable bit (WDT enabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = ON      // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = OFF         // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3/PGM pin has PGM function; low-voltage programming enabled)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#define _XTAL_FREQ 6000000
#include <stdint.h>//for line26

#define LED_Yellow RC0
#define LED_Green  RC1
 
uint8_t C = 0; // Global Counter Variable
 
void main()
{
  // -- [[ IO Configurations ]] --
    TRISB = 0xFF; // Inputs
    TRISC = 0x00; // Outputs
    PORTC=0X00;
    TMR1 = 0x01;
    
    // -- [[ Configure Timer1 + Interrupts ]] --
    INTCON |= 0x90; // enabling global interrupt enable & external interrupt enable bits
    OPTION_REG &= 0x7F; // internal pull-up enable
    
   
  while(1)
  {
    if(RB1==0)  // When Button Is Pressed, Toggle The Green LED
    { LED_Yellow = 1;
      __delay_ms(2000);
      LED_Yellow =0; 
    }
  }
}
 
// Interrupt Service Routine - ISR
void __interrupt() _ISR(){//interrupt sub-routine
       if(INTCON & 0X02){//when external interrupt bit enabled
         LED_Green = 1;
         __delay_ms(1000);
         LED_Green=0;
    }
    INTCON&=0XFD;//external interrupt flag disable by user
}